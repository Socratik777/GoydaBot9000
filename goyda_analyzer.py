from pathlib import Path
import random
import logging
import re
import json
from itertools import groupby
from utils import (
    _GOYDA_RE,
    contains_bold,
    contains_underline,
    count_exclamations,
    is_upper,
)
from config import TRIGGERS_PATH


# —à–∞–±–ª–æ–Ω—ã —Ä–µ–∞–∫—Ü–∏–π
INSULTS = [
    "–≤—ã–ø–µ–π –∞—Ü–µ—Ç–æ–Ω–∞ {user}",
    "—Å–∏–¥–∏—à—å —Å–∫—É–ª–∏—à—å, {user}? –∞ –Ω–∞–¥–æ –∫–∏–µ–≤ –±—Ä–∞—Ç—å!",
    "{user}, –∏—â–∏ —Å–µ–±—è –Ω–∞ —Å–∞–π—Ç–µ –º–∏—Ä–æ—Ç–≤–æ—Ä–µ—Ü",
    "–°—Ç–æ–∏—Ç –∏—Å–∫–æ—Ä–µ–Ω–∏—Ç—å —Ç–∞–∫—É—é –µ—Ä–µ—Å—å",
    "–ê –Ω–µ —Ö–æ—á–µ—à—å –ø–æ–¥–∫–∞—á–∞—Ç—å—Å—è?"
]
FANFARES = [
    "üéâ –ó–ê –ù–ê–ú–ò –ú–û–°–ö–í–ê! {user}!",
    "üöÄ _–ú–∞—Ç—å –û–±–∞–º—ã_ –ü–†–û–ë–ò–¢–ê: {user}!",
    "ü•Å –¢–ê–ö –î–ï–†–ñ–ê–¢–¨, _{user}_!",
    "üì¢ –í—Å–µ–º —á–∞—Ç–∞–º —Å–ª—ã—à–∏–º —Ç–≤–æ—é –æ—Ä–≥–∏—é ‚Äî {user}!",
    "üöÄ–£—Å–ª—ã—à–∞–ª —Ç–µ–±—è —Ä–æ–¥–Ω–æ–π ‚Äì _{user}_!"
]

MAX_BASE = 6
MAX_CONTEXT = 5

# ‚îÄ‚îÄ –∑–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤ –æ–¥–∏–Ω —Ä–∞–∑ –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
with open(TRIGGERS_PATH, encoding="utf-8") as fp:
    TRIGGERS: list[str] = [t.lower() for t in json.load(fp)]

def score_message(text: str, username: str) -> tuple[int, str|None]:
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç (score, reply):
    ‚Ä¢ Base = 1 +1 –∑–∞ –∫–∞–∂–¥—É—é –≥—Ä—É–ø–ø—É –ø–æ–¥—Ä—è–¥ –∏–¥—É—â–∏—Ö –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö –±—É–∫–≤ >1 –≤ —Å–ª–æ–≤–µ ¬´–≥–æ–π–¥–∞¬ª;
    ‚Ä¢ +1 –∑–∞ CAPSLOCK –≤—Å–µ–≥–æ —Å–ª–æ–≤–∞;
    ‚Ä¢ +1 –∑–∞ –∂–∏—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç;
    ‚Ä¢ +1 –∑–∞ –ø–æ–¥—á—ë—Ä–∫–Ω—É—Ç—ã–π —Ç–µ–∫—Å—Ç;
    ‚Ä¢ +1 –∑–∞ –ª—é–±–æ–µ —Ç—Ä–∏–≥–≥–µ—Ä–Ω–æ–µ —Å–ª–æ–≤–æ –≤ —Ç–µ–∫—Å—Ç–µ;
    –ü—Ä–∏ –ø–æ–ª–Ω–æ–º —Å—Ç—Ä–æ—á–Ω–æ–º ¬´–≥–æ–π–¥–∞¬ª —à—Ç—Ä–∞—Ñ -5 –∏ –≤—ã–±–æ—Ä INSULTS.
    """
    # –Ω–µ—Ç ¬´–≥–æ–π–¥—ã¬ª ‚Üí 0
    match = _GOYDA_RE.search(text)
    if not match:
        return 0, None

    word = match.group(0)
    # —Å—Ç—Ä–æ–≥–æ —Å—Ç—Ä–æ—á–Ω–∞—è ¬´–≥–æ–π–¥–∞¬ª ‚Üí —à—Ç—Ä–∞—Ñ
    if word.strip() == word.lower():
        return -5, random.choice(INSULTS).format(user=username)

    # –±–∞–∑–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞: 1 + –≥—Ä—É–ø–ø—ã –ø–æ–≤—Ç–æ—Ä–æ–≤ >1
    base = 1
    for char, grp in groupby(word.lower()):
        if len(list(grp)) > 1:
            base += 1
    # –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º
    base = min(base, MAX_BASE)

    # –±–æ–Ω—É—Å—ã: –ø–æ –æ–¥–Ω–æ–º—É –∑–∞ –∫–∞–∂–¥–æ–µ —É—Å–ª–æ–≤–∏–µ
    bonus = 0
    if word.isupper():
        bonus += 1
    if contains_bold(text):
        bonus += 1
    if contains_underline(text):
        bonus += 1
    lower = text.lower()
    if any(trig in lower for trig in TRIGGERS):
        bonus += 1

    score = base + bonus

    # –æ—Ç–≤–µ—Ç —Ç–æ–ª—å–∫–æ –¥–ª—è CAPSLOCK
    reply = None
    if is_upper(text):
        reply = random.choice(FANFARES).format(user=username)

    return score, reply


# ----------------------------------------------------------------------
#  –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –¥–ª—è –±—ã—Å—Ç—Ä–æ–π ¬´—à—Ç—Ä–∞—Ñ/–±–æ–Ω—É—Å¬ª –±–µ–∑ reply
#  –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ handlers.py –∫–∞–∫ analyse_goyda(text) -> int
# ----------------------------------------------------------------------
def analyse_goyda(text: str) -> int:
    """
    –£–ø—Ä–æ—â—ë–Ω–Ω–∞—è –æ—Ü–µ–Ω–∫–∞:
    ‚Ä¢ +5  –µ—Å–ª–∏ –≤—Å—è ¬´–≥–æ–π–¥–∞¬ª –≤ CAPSLOCK.
    ‚Ä¢ ‚àí5  –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ—Å—Ç–æ–∏—Ç –¢–û–õ–¨–ö–û –∏–∑ —Å—Ç—Ä–æ—á–Ω–æ–π '–≥–æ–π–¥–∞'.
    ‚Ä¢  0  –∏–Ω–∞—á–µ.
    """
    if not _GOYDA_RE.search(text):
        return 0

    stripped = text.strip()
    if stripped == stripped.lower():
        # —Å—Ç—Ä–æ–≥–æ –º–∞–ª–µ–Ω—å–∫–∞—è
        return -5
    if stripped.isupper():
        return +5
    return 0